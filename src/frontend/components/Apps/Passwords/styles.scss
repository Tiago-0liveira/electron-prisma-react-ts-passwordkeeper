@import "../../../vars";

.PasswordsComponent {
	height: 100%;
	background-color: $passwordsComp-bg-color;
	width: 100%;
	display: flex;
	flex-direction: column;

	.Rows-header {
		flex: 0 0 $RowsHeaderHeight;
		position: sticky;
		width: calc(100%);
        display: grid;
        grid-template-columns: $PasswordGrid;
		background-color: $row-background;
		font-size: 20px;
		height: $RowsHeaderHeight;
		border-bottom: 2px solid $light-blue;
		user-select: none;
        div.Label {
            display: flex;
            //justify-content: center;
			padding-left: 10px;	 
			letter-spacing: 0.4px;
            align-items: center;
            &:not(:last-child) {
              border-right: $gridBorder;
            }
        }
	}

	.Rows, .Cards {
		flex: 1;
		width: 100%;
		overflow-y: overlay;
		background-color: $passwordsComp-bottomBar-bg;
		&::-webkit-scrollbar {
			width: 4px;
            position: absolute;
			background-color: transparent;
		}
		&::-webkit-scrollbar-thumb {
			border-radius: 2px;
			background-color: $light-blue;
			//transition: all 0.2s;
            position: absolute;
			&:active {
				background-color: $smooth-blue;
			}
		}
	}
	.Cards {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: center;
	}
	/*.newButton {
		position: absolute;
		top: 5px;
		left: 5px;
		border-radius: 2px;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: $light-green;
		padding: 4px;
		&:hover {
			background-color: $bs-green;
		}
	}
	.searchButton {
		position: absolute;
		top: 5px;
		left: 35px;
		color:black;
		border-radius: 2px;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: $yellow;
		padding: 4px;
		&:hover {
			background-color: $yellow-orange;
		}
		z-index: 1;
	}*/
	.clearSearchFilterButton {
		position: absolute;
		top: 5px;
		left: 45px;
		border-radius: 2px;
		display: flex;
		justify-content: flex-end;
		align-items: center;
		color: $red;
		background-color: darken($color: $passwordsComp-bg-color, $amount: 5%);
		padding: 4px 4px 4px 20px;
		&:hover {
			background-color: lighten($color: $passwordsComp-bg-color, $amount: 5%);
		}
	}
	.bottomBar {
		background-color: $passwordsComp-bottomBar-bg;
		transition: all 0.3s;
		.top-bar {
			position: relative;
			height: $BottomBarHeight;
			width: 100%;
			bottom: 0;
			display: flex;
			align-items: center;
			justify-content: flex-start;
			//gap: 10px;
			font-size: 21px;
			border-top: 2px solid $light-blue;
			user-select: none;
			> .button {
				border-radius: 3px;
				padding: 4px 6px;
				color: black;
				&:hover {
					cursor: pointer;
				}
				> span.label {
					margin-right: 10px;
				}
				&:active {
					transform: scale(0.98);
				}
				&:not(:first-child) {
					margin-left: 10px;
				}
				&:first-child {
					margin-left: 5px;
				}
			}
			> .newButton {
				display: flex;
				justify-content: space-between;
				align-items: center;
				background-color: $viridian-green;
				&:hover {
					background-color: darken($viridian-green, 5);
				}
				&:active {
					background-color: lighten($viridian-green, 5);
				}
			}
			> .editButton {
				display: flex;
				justify-content: space-between;
				align-items: center;
				background-color: $yellow;
				&:hover {
					background-color: darken($yellow, 5);
				}
				&:active {
					background-color: lighten($yellow, 5);
				}
			}
			/*> .searchButton {
				//margin-left: 10px;
				position: relative;
				color: black;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: darken($blue-purple, 5);
				transition: width 0.3s;
				&:hover {
					background-color: $blue-purple;
				}
				span.label.displayNone {
					display: none;
				}

				input {
					background-color: transparent;
					border: none;
					border-bottom: 1px solid black;
					font-size: 16px;
					margin: 3px 8px;
					transition: width 0.3s;
					animation: searchInputOpen 0.3s forwards;
					&.displayNone {
						width: 35px;
						animation: searchInputClose 0.3s forwards;
						display: none;
					}
					&:focus {
						outline: none;
					}
				}
				> span.close {
					padding: 0 5px;
					&:hover svg {
						color: $red;
					}
					&.displayNone {
						display: none;
					}
				}
				z-index: 1;
			}*/
			> .filterButton {
				//margin-left: 10px;
				position: relative;
				color: black;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: $lavender-gray;
				&:hover {
					background-color: $white-azure;
				}
				&:active {
					background-color: darken($lavender-gray, 5);
				}
				z-index: 1;
			}
			> .error {
				margin-left: 10px;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: $red;
				> svg {
					color: $white-azure;
					margin-left: 5px;
					margin-right: 8px;
				}
			}

			/*> .filterToggle {
				//margin-left: 10px;
				position: relative;
				color: black;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: $lavender-gray;
				&:hover {
					background-color: $white-azure;
				}
				&:active {
					background-color: darken($lavender-gray, 5);
				}
				z-index: 1;
			}*/
		}
		.bottom-bar {
			height: 0;
			transition: all 0.3s;
			position: relative;
			form.new,
			form.edit,
			form.filter {
				width: 100%;
				height: 100%;
				position: relative;
				display: grid;
				grid-template-columns: 3% 40% 40% 5% 9% 3%;
				div.input {
					position: relative;
					display: flex;
					justify-content: center;
					align-items: center;
					flex-direction: row;
					span.inputWrapper {
						position: relative;
						display: flex;
						justify-content: center;
						align-items: center;
						flex-direction: row;

						border-bottom: 2px solid $viridian-green;
						&:focus-within:not(.error) {
							border-bottom: 2px solid $blue-purple;
							label svg{
								color: $blue-purple;
							}
						}

						label {
							margin-right: 1px;
							margin-left: 1px;
							svg {
								color: $viridian-green;
							}
							&.password:hover {
								cursor: pointer;
							}
						}
						&.error {
							border-bottom: 2px solid $red;
							& svg {
								color: $red;
							}
						}

						input {
							background-color: transparent;
							border: none;
							color: $lavender-gray;
							font-size: 16px;
							margin: 3px 3px;
							width: 175px;
							transition: all 0.3s;
							&::placeholder {
								user-select: none;
							}
							&#email {
								&:focus-within::-webkit-calendar-picker-indicator:hover {
									color: $blue-purple;
								}
								&::-webkit-calendar-picker-indicator {
									color: $white-azure;
									&:hover {
										color: $viridian-green;
									}

									background-color: transparent;
								}
							}
							&.open {
								width: 150px;
							}
							&:focus {
								outline: none;
							}
						}
					}
					&:nth-child(1) {
						grid-row: 2/4;
						grid-column: 2;
					}
					&:nth-child(2) {
						grid-row: 4/6;
						grid-column: 2;
					}
					&:nth-child(3) {
						grid-row: 2/4;
						grid-column: 3;
					}
					&:nth-child(4) {
						grid-row: 4/6;
						grid-column: 3;
					}
				}
				div.buttonwrappers {
					display: flex;
					justify-content: space-evenly;
					flex-direction: column;
					align-items: center;
					
					/*width: 78px;
					height: 26px;*/
					span.button {
						padding: 4px;
						border-radius: 3px;
						font-weight: 450;
						font-size: 0.95em;
						display: flex;
						width: 78px;
						flex: 0.21;
						align-items: center;
						justify-content: space-evenly;
						user-select: none;
						color: #f1f9ffdc;
						&:hover {
							cursor: pointer;
						}
						&:active {
							width: 75px;
							padding: 2px;
							margin: 2px 2px;
						}
						&:hover svg {
							color: black;
							transition: color 0.1s ease-in;
						}
						&.close {
							background-color: $red;
							&:hover {
								//background-color: lighten($red, 5%);
							}
						}
						&.save {
							background-color: $viridian-green;
							&:hover {
								//background-color: lighten($viridian-green, 5%);
							}
						}
						&.erase {
							background-color: $yellow-orange;
							&:hover {
								//background-color: lighten($yellow-orange, 5%);
							}
						}
					}
				}
			}
			form.new, form.edit, form.filter {
				grid-template-rows: 5% repeat(4, 22.5%) 5%;
				div.buttonwrappers {
					/*width: 70px;
					height: 100%;*/
					grid-row: 2/ span 4;
					grid-column: 5;
					/*&.close {
						grid-row: 2/4;
						grid-column: 5;
					}
					&.erase {
						grid-row: 3/5;
						grid-column: 5;
					}
					&.save {
						grid-row: 4/6;
						grid-column: 5;
					}*/
				}
			}
			form.edit, form.filter {
				div.NoRowSelected {
					display: flex;
					justify-content: center;
					align-items: center;
					font-weight: 500;
					grid-row: 2/6;
					grid-column: 2/4;
				}
				div.Filter {
					display: flex;
					justify-content: center;
					flex-direction: column;
					grid-row: 2/6;
					grid-column: 2;
					div.input {
						display: inline;
						width: 65%;
						margin-left: 15px;
						margin-bottom: 10px;
						
						span.inputWrapper {
							display: flex;
							justify-content: unset;
							align-items: center;
						}
					}
				}
				div.checkbox {
					margin-left: 15px;
					svg {
						margin-right: 5px;
					}
					user-select: none;
				}
				div.checkboxes {
					display: flex;
					align-items: flex-start;
					justify-content: center;
					flex-direction: column;
					grid-row: 2/6;
					grid-column: 3;
					div.checkbox {
						margin-top: 5px;
					}
				}
			}
			/*form.edit {
				//grid-template-rows: 6% repeat(3, 29.33%) 6%;
				grid-template-rows: 5% repeat(4, 22.5%) 5%;
				span.buttonwrapper {
					&.close {
						grid-row: 2/4;
						grid-column: 5;
					}
					&.erase {
						grid-row: 3/5;
						grid-column: 5;
					}
					&.save {
						grid-row: 4/6;
						grid-column: 5;
					}
				}
			}*/
		}
		&:not(.closed) .bottom-bar {
			height: 140px;
			border-top: 2px solid $light-blue;
		}
		&.closing .bottom-bar {
			border-top: 2px solid $light-blue;
		}
		&.closed .bottom-bar {
			animation: border-bot 0.3s forwards;
		}
		@keyframes searchInputOpen {
			0% {
				width: 35px;
			}
			100% {
				width: 150px;
			}
		}
		@keyframes border-bot {
			99% {
				border-top: 2px solid $light-blue;
			}
			100% {
				border-top: 2px solid transparent;
			}
		}
	}


}